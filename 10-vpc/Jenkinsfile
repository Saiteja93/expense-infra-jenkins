pipeline {
    agent {
        label 'agent -1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters{
        choice(name:'ACTION', choices: ['apply','destroy'], description: 'select Action')
    }
     stages {
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                    sh """
                        cd 10-vpc
                        terraform init -reconfigure
                        terraform plan -out=tfplan
                    """
                }
            }
        }
        stage('Apply or destroy') {
          
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                    sh """
                        cd 10-vpc
                        if [ ${params.Action} == 'apply' ]
                        then 
                          terraform apply -auto-approve
                        elif [${params.Action} == 'destroy' ]
                           terraform destry -auto-approve
                        fi

                        
                    """

            }
        }
    }
    

    post {
        always {
            echo " this section runs always"
        }
        success {
            echo "this section run when pipeline sucecess"
        }
        failure {
            echo "this section runs when pipeline failed"
        }
    }
}
        
